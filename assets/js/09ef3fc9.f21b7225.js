"use strict";(self.webpackChunkcs=self.webpackChunkcs||[]).push([[951],{3905:(r,e,t)=>{t.d(e,{Zo:()=>y,kt:()=>d});var n=t(7294);function o(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}function a(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),t.push.apply(t,n)}return t}function p(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(r,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))}))}return r}function i(r,e){if(null==r)return{};var t,n,o=function(r,e){if(null==r)return{};var t,n,o={},a=Object.keys(r);for(n=0;n<a.length;n++)t=a[n],e.indexOf(t)>=0||(o[t]=r[t]);return o}(r,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(r);for(n=0;n<a.length;n++)t=a[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(r,t)&&(o[t]=r[t])}return o}var s=n.createContext({}),c=function(r){var e=n.useContext(s),t=e;return r&&(t="function"==typeof r?r(e):p(p({},e),r)),t},y=function(r){var e=c(r.components);return n.createElement(s.Provider,{value:e},r.children)},l={inlineCode:"code",wrapper:function(r){var e=r.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(r,e){var t=r.components,o=r.mdxType,a=r.originalType,s=r.parentName,y=i(r,["components","mdxType","originalType","parentName"]),u=c(t),d=o,f=u["".concat(s,".").concat(d)]||u[d]||l[d]||a;return t?n.createElement(f,p(p({ref:e},y),{},{components:t})):n.createElement(f,p({ref:e},y))}));function d(r,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof r||o){var a=t.length,p=new Array(a);p[0]=u;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=r,i.mdxType="string"==typeof r?r:o,p[1]=i;for(var c=2;c<a;c++)p[c]=t[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1602:(r,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>p,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=t(7462),o=(t(7294),t(3905));const a={sidebar_position:1,description:"Arrays",title:"Array Removal",id:"python-arrays-pop"},p="Pop",i={unversionedId:"python/Arrays/python-arrays-pop",id:"python/Arrays/python-arrays-pop",title:"Array Removal",description:"Arrays",source:"@site/docs/python/Arrays/pop.md",sourceDirName:"python/Arrays",slug:"/python/Arrays/python-arrays-pop",permalink:"/My-Cs/docs/python/Arrays/python-arrays-pop",draft:!1,editUrl:"https://github.com/Jaeden-T/My-Cs/edit/master/docs/python/Arrays/pop.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Arrays",title:"Array Removal",id:"python-arrays-pop"},sidebar:"myAutogeneratedSidebar",previous:{title:"Array Basics",permalink:"/My-Cs/docs/python/Arrays/python-arrays-basics"},next:{title:"Functions-vs-Procedures",permalink:"/My-Cs/docs/python/Functions-vs-Procedures"}},s={},c=[{value:"1D Array",id:"1d-array",level:2},{value:"2D array",id:"2d-array",level:2}],y={toc:c};function l(r){let{components:e,...t}=r;return(0,o.kt)("wrapper",(0,n.Z)({},y,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pop"},"Pop"),(0,o.kt)("p",null,"Pop is basically a way to remove stuff from array"),(0,o.kt)("h2",{id:"1d-array"},"1D Array"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'testArray = ["apple", "rice", "fish"]\n\ntestArray.pop(1)\n\nprint(testArray)\n')),(0,o.kt)("p",null,'The 1 in .pop(1) stands for position 1 in the array which stands is "rice" which leads our output to be ',(0,o.kt)("inlineCode",{parentName:"p"},"['apple', 'fish']")),(0,o.kt)("h2",{id:"2d-array"},"2D array"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'testArray = [["apple", "rice", "fish"], ["row1apple", "row1rice", "row1fish"]]\n\ntestArray[1].pop(1)\n\nprint(testArray)\n')),(0,o.kt)("p",null,"So TestrArray","[1]",' the 1 there represents which row and the .pop(1) removes the colleum\nour output would be "[',"['apple', 'rice', 'fish']",", ","['row1apple', 'row1fish']",']" as it selected row 1 and collem 1.'))}l.isMDXComponent=!0}}]);