"use strict";(self.webpackChunkcs=self.webpackChunkcs||[]).push([[216],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,y=d["".concat(s,".").concat(f)]||d[f]||l[f]||c;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<c;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4271:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const c={sidebar_position:5,description:"Functions vs procderus explaning the diffrences",title:"Fuctions vs PRocderues",id:"python-funcVsProc"},a="Procedures:",i={unversionedId:"python/python-funcVsProc",id:"python/python-funcVsProc",title:"Fuctions vs PRocderues",description:"Functions vs procderus explaning the diffrences",source:"@site/docs/python/5Functions-vs-Procedures.md",sourceDirName:"python",slug:"/python/python-funcVsProc",permalink:"/My-Cs/docs/python/python-funcVsProc",draft:!1,editUrl:"https://github.com/Jaeden-T/My-Cs/edit/master/docs/python/5Functions-vs-Procedures.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Functions vs procderus explaning the diffrences",title:"Fuctions vs PRocderues",id:"python-funcVsProc"},sidebar:"myAutogeneratedSidebar",previous:{title:"Conditions!",permalink:"/My-Cs/docs/python/python-conditions"},next:{title:"Functions!",permalink:"/My-Cs/docs/python/python-functions"}},s={},p=[],u={toc:p};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"procedures"},"Procedures:"),(0,o.kt)("p",null,"A procedure is a named block of code that performs a specific task, but does not return a value. The procedure can be called by another part of the program. "),(0,o.kt)("p",null,"Eg:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'def display_menu():\n    print("1: Log in")\n    print("2: Sign up")\n    print("9: Quit")\n')),(0,o.kt)("p",null,"Functions:\nA function is a named block of code that has the purpose of returning a value (called the 'return value'). Like a procedure, a function can be called by another part of the program."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"def calculate_area(length):\n    area = length * length\n    return area\n\ndef main():\n    length = 12\n    result = calculate_area(length)\n    print(result)\n")))}l.isMDXComponent=!0}}]);